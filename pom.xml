<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>wo1261931780</groupId>
	<artifactId>st-highlyConcurrent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>st-highlyConcurrent</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<!--<spring-native.version>0.12.1</spring-native.version>-->
		<!--maven的打包配置-->
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<!--编码格式-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	<dependencies>
		<!--=============================================================================================-->
		<!--下面两个配置基本地启动，后面的按需修改-->
		<!--=============================================================================================-->
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter</artifactId>-->
		<!--	<version>3.3.0</version>-->
		<!--</dependency>-->
		<!--spring网络WEB-->
		<!--使用SpringMVC构建Web，包括RESTful，应用程序。使用Apache
		Tomcat作为默认的嵌入式容器。-->
		<!--里面已经包含了springMVC的内容-->
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter-web</artifactId>-->
		<!--	<version>3.3.0</version>-->
			<!--<scope>test</scope>-->
			<!--上面的scope表示作用范围-->
			<!--在没有说明的情况下，scope默认就是compile-->
			<!--如果我把mysql这些数据库驱动jar包设置为runtime-->
			<!--那么我在日常使用的过程中，是无法访问这些类的-->
		<!--</dependency>-->
		<!--在 pom.xml 文件中引入 Jetty 依赖并排除 Tomcat 依赖-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!--Netty 是一个高性能的异步事件驱动网络应用框架，特别适合构建高性能非阻塞应用。Spring WebFlux 默认使用 Netty 作为嵌入式服务器。-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<!--在 pom.xml 文件中引入 Undertow 依赖并排除 Tomcat 依赖-->
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter-jetty</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter-web</artifactId>-->
		<!--	<exclusions>-->
		<!--		<exclusion>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-tomcat</artifactId>-->
		<!--		</exclusion>-->
		<!--	</exclusions>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--	<groupId>org.springframework.boot</groupId>-->
		<!--	<artifactId>spring-boot-starter-undertow</artifactId>-->
		<!--</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
